name: test-app

namespace: helm-test

# deployment:
#   - name: grafana
#     image: grafana
#     port: 3000
#     resources: 
#       memory: "500m"
#       cpu: 100m
#     env:
#       - name: INFLUXDB_DB
#         value: sensors
#       - name: INFLUXDB_ADMIN_USER
#         value: admin-user
#       - name: INFLUXDB_ADMIN_PASSWORD
#         value: telegraf-admin-password
#       - name: INFLUXDB_USER
#         value: telegraf-username
#       - name: INFLUXDB_PASSWORD
#         value: telegraf-password
#     volumes:
#       - name: pv
#         path: /var/lib/influxdb/
#         selector: test-pvc

# ? Finished
# pvc:
#   - name: <name>
#     storage: <size>
#   - name: test-pvc
#     storage: 500mi

# ? Finished
# ingress:
#   - name: <name>
#     selector: <deployment_app>
#     path: <url_path>
#     port: <incoming_port>
#     host: <optional_host> This will enable tls

#   - name: ig1
#     selector: kavanet.io-service
#     path: /
#     port: 80
#     host: grafana.kavanet.io

#   - name: ig2
#     selector: kavanet.io-service
#     path: /test-path
#     port: 26



# ! Needs more work
configmap: 
  - name: test
    file: "config/telegraf.conf"

  - name: test2
    file: "config/telegraf.conf"



# ? Finished
# service:
#   nodePort:
#     - name: <name>
#       selector: <deployment_name>
#       port: <deployment_port>
#       nodePort: <external_port>

#     - name: np21
#       selector: nginx1
#       port: 80
#       nodePort: 31001

#   clusterIP:
#     - name: <name>
#       selector: <deployment>
#       port: <internal_port>

#     - name: cip1
#       selector: nginx2
#       port: 80

#   loadBalancer:
#     - name: <name>
#       selector: <deployment_name>
#       port: <external_port>

#     - name: lb1
#       selector: nginx3
#       port: 80









# All stuff below is correct but needs comments
# deployment:
#   - name: nginx
#     image: nginx
#     port: 80

# service:
#   nodePort:
#     - name: "Name"
#       selector: "App to attach to"
#       port: "Port of the app"
#       nodePort: "Port to connect to the outside world"
#   clusterIP:
#     - name: cip1
#       selector: "none"
#       port: 80
#   loadBalancer: # Check if target port is needed with loadbalancer
#     - name: lb1
#       selector: nginx
#       port: 80


























# name: kavanet-io

# namespace: kavanet-io

# deployment:
#   # - name: kavanet-io
#   #   image: 192.168.1.61:5000/kavanet.io
#   #   port: 80

#   - name: grafana
#     image: grafana
#     port: 3000
#     resources: 
#       memory: "500m"
#       cpu: 100m
#     env:
#       - name: INFLUXDB_DB
#         value: sensors
#       - name: INFLUXDB_ADMIN_USER
#         value: admin-user
#       - name: INFLUXDB_ADMIN_PASSWORD
#         value: telegraf-admin-password
#       - name: INFLUXDB_USER
#         value: telegraf-username
#       - name: INFLUXDB_PASSWORD
#         value: telegraf-password
#     volumes:
#       - name: pv
#         path: /var/lib/influxdb/
#         pvcName: test-pvc

# # service:
# #   nodePort:
# #     - name: kavanetes-nodeport
# #       selector: kavanet-io
# #       port: 80
# #       nodePort: 31001
# #   clusterIP:
# #     - name: cip1
# #       selector: "none"
# #       port: 80

# # ingress:
# # #   - name: kavanet-io
# # #     selector: kavanet.io-service
# # #     path: /
# # #     port: 80
# # #     tls: true
# # #     host: grafana.kavanet.io

# #   - name: ig2
# #     path: /kavanet
# #     selector: cip1
# #     port: 80

# # pvc:
# #   name: pvc-name
# #   storage: 500Mi






# # service:
# #   nodePort:
# #     - name: <name>
# #       selector: <deployment_name>
# #       port: <container_port>
# #       nodePort: <external_port>

# #   clusterIP:
# #     - name: <name>
# #       selector: <deployment>
# #       port: <internal_port>

# #   loadBalancer:
# #     - name: <name>
# #       selector: <deployment_name>
# #       port: <external_port>

# service:
#   nodePort:
#     - name: np1
#       selector: nginx1
#       port: 80
#       nodePort: 31001

#   clusterIP:
#     - name: cip1
#       selector: nginx2
#       port: 80

#   loadBalancer:
#     - name: lb1
#       selector: nginx3
#       port: 80






# # All stuff below is correct but needs comments
# # deployment:
# #   - name: nginx
# #     image: nginx
# #     port: 80

# # service:
# #   nodePort:
# #     - name: "Name"
# #       selector: "App to attach to"
# #       port: "Port of the app"
# #       nodePort: "Port to connect to the outside world"
# #   clusterIP:
# #     - name: cip1
# #       selector: "none"
# #       port: 80
# #   loadBalancer: # Check if target port is needed with loadbalancer
# #     - name: lb1
# #       selector: nginx
# #       port: 80

# # config: 
# #   name: test
# #   file: "config/telegraf.conf"