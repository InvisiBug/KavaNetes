####################################
#
#   #     #                                                         
#   ##    #   ##   #    # ######  ####  #####    ##    ####  ###### 
#   # #   #  #  #  ##  ## #      #      #    #  #  #  #    # #      
#   #  #  # #    # # ## # #####   ####  #    # #    # #      #####  
#   #   # # ###### #    # #           # #####  ###### #      #      
#   #    ## #    # #    # #      #    # #      #    # #    # #      
#   #     # #    # #    # ######  ####  #      #    #  ####  ###### 
#
####################################
apiVersion: v1
kind: Namespace
metadata:
  name: unifi-proxy

####################################
#
#   #     #                        
#   ##    #  ####  # #    # #    # 
#   # #   # #    # # ##   #  #  #  
#   #  #  # #      # # #  #   ##   
#   #   # # #  ### # #  # #   ##   
#   #    ## #    # # #   ##  #  #  
#   #     #  ####  # #    # #    #
#
####################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
  namespace: unifi-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits: 
              memory: "128Mi"
              cpu: "500m"
        volumeMounts:
        - name: unifi-conf
          mountPath: "/etc/nginx/conf.d/"
      volumes:
      - name: unifi-conf
        configMap:
          name: unifi-configmap

####################################
#
#     #####                                       
#    #     # ###### #####  #    # #  ####  ###### 
#    #       #      #    # #    # # #    # #      
#     #####  #####  #    # #    # # #      #####  
#          # #      #####  #    # # #      #      
#    #     # #      #   #   #  #  # #    # #      
#     #####  ###### #    #   ##   #  ####  ######
#
####################################
---
apiVersion: v1
kind: Service
metadata:
  name: unifi
  namespace: unifi-proxy
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80

####################################
#
#   ###                                           
#    #  #    #  ####  #####  ######  ####   ####  
#    #  ##   # #    # #    # #      #      #      
#    #  # #  # #      #    # #####   ####   ####  
#    #  #  # # #  ### #####  #           #      # 
#    #  #   ## #    # #   #  #      #    # #    # 
#   ### #    #  ####  #    # ######  ####   ####  
#
####################################
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: testkavanet-ingress
  namespace: unifi-proxy
  annotations:  
    # kubernetes.io/ingress.class: "traefik"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
    ingress.kubernetes.io/protocol: http
    
    # traefik.ingress.kubernetes.io/redirect-entry-point: https

    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  rules:
  - host: unifi.kavanet.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: unifi
            port:
              number: 80
  tls:
  - hosts:
    - unifi.kavanet.io
    secretName: unifi.kavanet.io-tls

####################################
#
#   #####                                   #     #               
#  #     #  ####  #    # ###### #  ####     ##   ##   ##   #####  
#  #       #    # ##   # #      # #    #    # # # #  #  #  #    # 
#  #       #    # # #  # #####  # #         #  #  # #    # #    # 
#  #       #    # #  # # #      # #  ###    #     # ###### #####  
#  #     # #    # #   ## #      # #    #    #     # #    # #      
#   #####   ####  #    # #      #  ####     #     # #    # #      
#
####################################
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: unifi-configmap
  namespace: unifi-proxy
data:
  proxy.conf: |
    upstream unifi {
        server 192.168.1.45:8443;
    }

    server {
        listen 80;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;

        location / {
            proxy_pass https://unifi;
            proxy_ssl_verify off;
        }
    }