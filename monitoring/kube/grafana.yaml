
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana
  namespace: monitoring
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 500Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      volumes:
      - name: pv
        persistentVolumeClaim:
          claimName: grafana
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: pv
          mountPath: /var/lib/grafana/
        resources:
            limits: 
              memory: "512Mi"
              cpu: "1000m"
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-loadlabancer
  namespace: monitoring
spec:
  type: LoadBalancer
  selector:
    app: grafana
  ports:
  - port: 80
    name: grafana
    protocol: TCP
    targetPort: 3000
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: monitoring-ingress
#   namespace: monitoring
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/rewrite-target: /
#     # cert-manager.io/cluster-issuer: "letsencrypt-prod"


# spec:
#   rules:
#   # - host: kavanet.io
#     # http:
#   - http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: grafana-service
#             port: 
#               number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: monitoring
spec:
  type: ClusterIP
  selector:
    app: grafana
  ports:
  - port: 80
    name: grafana
    protocol: TCP
    targetPort: 3000